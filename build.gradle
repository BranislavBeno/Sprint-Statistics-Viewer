plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.google.cloud.tools.jib' version '2.4.0'
    id 'jacoco'
    id 'org.sonarqube' version '2.8'
    id 'com.gorylenko.gradle-git-properties' version '2.2.4'
}

group = 'com.sprint'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    junitVersion = '5.6.2'
    testcontainersVersion = '1.14.3'
    sonarProjectName = 'SprintStatsViewer'
    sonarProjectKey = 'com.view.sprintstats'
    jacocoDestinationFile = file("$buildDir/jacoco/test.exec")
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file(jacocoDestinationFile)
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'de.codecentric:spring-boot-admin-starter-client:2.2.2'
    implementation "org.springframework:spring-jdbc"
    implementation "org.apache.commons:commons-math3:3.6.1"
    implementation "mysql:mysql-connector-java"
    implementation "guru.springframework:chuck-norris-for-actuator:0.0.2"
    developmentOnly "org.springframework.boot:spring-boot-devtools"
    testImplementation "org.junit.platform:junit-platform-launcher"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation "org.testcontainers:mysql:${testcontainersVersion}"
    testImplementation "org.testcontainers:selenium:${testcontainersVersion}"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver"
    testImplementation "org.seleniumhq.selenium:selenium-chrome-driver"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 1
def versionBuild = 7
version = "R${versionMajor}.${versionMinor}.${versionPatch}"

springBoot {
    buildInfo()
}

jacoco {
    toolVersion = '0.8.2'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "BranislavBeno_SprintStatsViewer"
    }
}

// Docker image building
jib {
    to {
        image = 'beo1975/sprint-stats-viewer'
        tags = ['1.0.1']
    }
    container {
        ports = ['5000']
        creationTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'")
        volumes = ['/app/log']
    }
}

