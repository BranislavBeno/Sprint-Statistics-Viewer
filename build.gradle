plugins {
	id 'java'
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.google.cloud.tools.jib' version '2.2.0'
}

group = 'com.sprint'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
  junitVersion = '5.6.2'
  testcontainersVersion = '1.14.2'
}

repositories {
	mavenCentral()
}

test {
  useJUnitPlatform()
  afterSuite { desc, result ->
    if (!desc.parent) {
      println "\nTest result: ${result.resultType}"
      println "Test summary: ${result.testCount} tests, " +
              "${result.successfulTestCount} succeeded, " +
              "${result.failedTestCount} failed, " +
              "${result.skippedTestCount} skipped"
    }
  }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	implementation "org.springframework:spring-jdbc"
	implementation "mysql:mysql-connector-java"
	implementation "com.fasterxml.jackson.core:jackson-databind:2.10.3"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
}

def versionMajor = 0
def versionMinor = 5
def versionPatch = 0
def versionBuild = 1
version = "R${versionMajor}.${versionMinor}.${versionPatch}"

// Docker image building
jib {
  to {
    image = 'beo1975/sprint-stats-viewer'
    tags = ['0.5.0', 'latest']
  }
  container {
    ports = ['5000']
    creationTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'")
  }
}

